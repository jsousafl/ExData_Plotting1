1:0.05:10
1:10
1:10:0.01
1:1
source('~/Documents/Learning_R/test2_TP1.R')
source('~/.active-rstudio-document')
source('~/Documents/Learning_R/test2_TP1.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
View(mydata)
View(mydata)
plot(y~x,data=gassermuller.estimator,type="l",
main="Regression function and its estimator",ylim=c(-2,2))
points(mydata$x,mydata$f,col="red",type="l")
View(gassermuller.estimator)
rm(x)
rm(y)
# Plot of the observations and the regression function
plot(y~x,data=mydata,main="Observations",pch=16,cex=0.5)
points(mydata$x,mydata$f,col="red",type="l")
# Plot of the regression function and its estimator
X11()
plot(y~x,data=gassermuller.estimator,type="l",
main="Regression function and its estimator",ylim=c(-2,2))
points(mydata$x,mydata$f,col="red",type="l")
X11()
plot(y~x,data=gassermuller.estimator,type="l",
main="Regression function and its estimator",ylim=c(-2,2))
points(mydata$x,mydata$f,col="red",type="l")
View(mydata)
View(mydata)
plot(y~x,data=gassermuller.estimator,type="l",
main="Regression function and its estimator")
plot(y~x,data=mydata,main="Observations",pch=16,cex=0.5)
points(mydata$x,mydata$f,col="red",type="l")
# Plot of the regression function and its estimator
X11()
plot(y~x,data=gassermuller.estimator,type="l",
main="Regression function and its estimator")
points(mydata$x,mydata$f,col="red",type="l")
plot(y~x,data=gassermuller.estimator,type="l",
main="Regression function and its estimator")
points(mydata$x,mydata$f,col="red",type="l")
points(mydata$x,mydata$y,col="blue",type="l")
graphics.off()
plot(y~x,data=gassermuller.estimator,type="l",
main="Regression function and its estimator")
points(mydata$x,mydata$f,col="red",type="l")
points(mydata$x,mydata$y,col="blue")
X11()
plot(y~x,data=gassermuller.estimator,type="l",
main="Regression function and its estimator")
points(mydata$x,mydata$f,col="red",type="l")
points(mydata$x,mydata$y,col="blue")
X11()
plot(y~x,data=gassermuller.estimator,type="l",
main="Regression function and its estimator")
points(mydata$x,mydata$f,col="red",type="l")
points(mydata$x,mydata$y,col="blue")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
# Plot of the observations and the regression function
plot(y~x,data=mydata,main="Observations",pch=16,cex=0.5)
points(mydata$x,mydata$f,col="red",type="l")
# Plot of the regression function and its estimator
X11()
plot(y~x,data=gassermuller.estimator,main="Regression function and its estimator")
points(mydata$x,mydata$f,col="red",type="l")
points(mydata$x,mydata$y,col="blue")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
seq(0.2,0.7,length(gridsize))
seq(0.2,0.7,length(gridsize))
seq(0.2,0.7,length.out = length(gridsize))
seq(0.2,0.7,length.out = length(gridsize))
length(gridsize)
len(gridsize)
dim(gridsize)
size(gridsize)
seq(0.2,0.7,length.out = 200)
source('~/.active-rstudio-document')
graphics.off()
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
graphics.off()
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
numeric(4)
numeric(30)
rnorm(6)
rnorm(6,1,2)
mean(rnorm(6))
graphics.off()
size_of_Xi<-6000
mu<-5
sig2<-2
n<-3000
random_vec_X = rep(rnorm(size_of_Xi,mu,sqrt(sig2)),n)
rep(0,4)
help("matrix")
source('~/.active-rstudio-document')
View(random_vec_X)
mean(random_vec_X)
mean(,random_vec_X)
rowMeans(random_vec_X)
View(random_vec_X)
source('~/.active-rstudio-document')
rowMeans(random_vec_X)
View(rowMeans(random_vec_X))
View(rowMeans(random_vec_X))
View(sqrt(rowMeans(random_vec_X))
sqrt(seq(0,1,0.5))
seq(0,1,0.5)**2
seq(0,1,0.5)-3
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
View(random_vec_X)
View(random_vec_X)
graphics.off()
size_of_Xi<-6000
mu<-5
sig2<-10
n<-3000
random_vec_X = matrix(rnorm(size_of_Xi,mu,sqrt(sig2)),
n,size_of_Xi)
xn_bar = rowMeans(random_vec_X)
xn_bar_sqrt = sqrt(xn_bar)
xn_bar_sq = xn_bar**2
custom_var = sqrt(n)*(xn_bar-mu) + xn_bar_sq
View(xn_bar)
source('~/Documents/Learning_R/delta_method.R')
source('~/Documents/Learning_R/delta_method.R')
View(xn_bar)
View(random_vec_X)
source('~/Documents/Learning_R/delta_method.R')
source('~/Documents/Learning_R/delta_method.R')
source('~/Documents/Learning_R/delta_method.R')
View(random_vec_X)
View(random_vec_X)
View(xn_bar)
source('~/Documents/Learning_R/delta_method.R')
source('~/Documents/Learning_R/delta_method.R')
source('~/Documents/Learning_R/delta_method.R')
source('~/Documents/Learning_R/delta_method.R')
source('~/Documents/Learning_R/delta_method.R')
source('~/Documents/Learning_R/delta_method.R')
View(random_vec_X)
source('~/Documents/Learning_R/delta_method.R')
source('~/Documents/Learning_R/delta_method.R')
rnorm(4,5,sqrt(10))
matrix(rnorm(4,5,sqrt(10)),5,4)
rnorm(4,5,sqrt(10))
matrix(rnorm(4,5,sqrt(10)),5,4)
matrix(seq(4,6,1),5,4)
matrix(seq(4,7,1),5,4)
matrix(seq(4,7,1),5,5)
matrix(seq(4,7,1),5,4)
matrix(seq(4,12,1),5,4)
matrix(runif(4),5,4)
matrix(runif(4),10,4)
matrix(runif(4),6,4)
matrix(runif(24),6,4)
source('~/Documents/Learning_R/delta_method.R')
source('~/Documents/Learning_R/delta_method.R')
lines(tmp,dnorm(tmp,mu,sqrt(sig2/n)))
lines(tmp,dnorm(tmp,mu,sqrt(sig2/n)))
source('~/Documents/Learning_R/delta_method.R')
source('~/Documents/Learning_R/delta_method.R')
source('~/Documents/Learning_R/delta_method.R')
X11()
hist(xn_bar,probability = TRUE,main="Approx Dist of Xn_bar",
xlab="Normal")
tmp <-seq(4,6,.001)
lines(tmp,dnorm(tmp,mu,sqrt(sig2/n)))
source('~/Documents/Learning_R/delta_method.R')
source('~/Documents/Learning_R/delta_method.R')
help("rnorm")
source('~/Documents/Learning_R/delta_method.R')
View(random_vec_X)
source('~/Documents/Learning_R/delta_method.R')
source('~/Documents/Learning_R/delta_method.R')
source('~/Documents/Learning_R/delta_method.R')
source('~/Documents/Learning_R/delta_method.R')
source('~/Documents/Learning_R/delta_method.R')
graphics.off()
size_of_Xi<-6000
mu<-5
sig2<-10
n<-3000
# random_vec_X = matrix(rnorm(n*size_of_Xi,mu,sqrt(sig2)),
#                       n,size_of_Xi)
random_vec_X = matrix(runif(n*size_of_Xi),
n,size_of_Xi)
xn_bar = rowMeans(random_vec_X)
xn_bar_sqrt = sqrt(xn_bar)
xn_bar_sq = xn_bar**2
custom_var = sqrt(n)*(xn_bar-mu) + xn_bar_sq
X11()
hist(xn_bar,probability = TRUE,main="Approx Dist of Xn_bar",
xlab="Normal")
tmp <-seq(0.4,0.52,.001)
lines(tmp,dnorm(tmp,mu,sqrt(sig2/size_of_Xi)))
legend("topleft","Delta Method",lty=1,bty = 'n')
graphics.off()
source('~/Documents/Learning_R/delta_method.R')
source('~/Documents/Learning_R/delta_method.R')
source('~/Documents/Learning_R/delta_method.R')
# lines(tmp,dnorm(tmp,mu,sqrt(sig2/size_of_Xi))
lines(tmp,dnorm(tmp,0.5,sqrt(1/(12*n)))
source('~/Documents/Learning_R/delta_method.R')
graphics.off()
source('~/Documents/Learning_R/delta_method.R')
source('~/Documents/Learning_R/delta_method.R')
source('~/Documents/Learning_R/delta_method.R')
random_vec_X[,0]
random_vec_X[,1]
random_vec_X[,2]
X11()
hist(random_vec_X[0,:],probability = TRUE,
main="Approx Dist of X1",xlab="Normal")
hist(random_vec_X[0,:],probability = TRUE,
main="Approx Dist of X1",xlab="Normal")
hist(random_vec_X[0,],probability = TRUE,
main="Approx Dist of X1",xlab="Normal")
a <- random_vec_X[0, ]
View(a)
a<-random_vec_X[,0]
View(a)
View(a)
View(random_vec_X)
random_vec_X['0',]
random_vec_X[0,]
random_vec_X[1,]
hist(random_vec_X[1,],probability = TRUE,
main="Approx Dist of X1",xlab="Normal")
hist(random_vec_X[2,],probability = TRUE,
main="Approx Dist of X1",xlab="Normal")
hist(random_vec_X[2,],probability = TRUE,
main="Approx Dist of X2",xlab="Normal")
source('~/Documents/Learning_R/delta_method.R')
source('~/Documents/Learning_R/delta_method.R')
View(random_vec_X)
source('~/Documents/Learning_R/delta_method.R')
source('~/Documents/Learning_R/delta_method.R')
source('~/Documents/Learning_R/delta_method.R')
cbind(c(2,1),c(4,0))
[2,1,3,4]
{2,1,3,4}
[2,1;3,4]
matrix((1,2,5,4),2,2)
matrix(data=(1,2,5,4),2,2)
matrix(c(1,2,5,4),2,2)
matrix(r(1,2,5,4),2,2)
matrix(c(1,2,5,4),2,2)
x <- c(3,4)
dim(x)< (1,2)
dim(x)<-(1,2)
dim(x)<-c(1,2)
View(x)
View(x)
#Input parameters
N<-3000
mu_1<-5
mu_2<-4
sig1_1<-10
sig1_2<-8
sig2_1<-sig1_2
sig2_2<-9
amount_of_random_samples<-6000 #useful for visualisation
#Define statistical parameters
sigma_matrix<-cbind(c(sig1_1,sig2_1),c(sig1_2,sig2_2))
mu_vector<-c(mu_1,mu_2)
dim(mu_vector)<-c(1,2)
#Creating data
x1<-matrix(rnorm(amount_of_random_samples*N,mu_1,sig1_1),
amount_of_random_samples,N)
x2<-matrix(rnorm(amount_of_random_samples*N,mu_2,sig2_2),
amount_of_random_samples,N)
#Compute mean
x1_bar<- rowMeans(x1)
x2_bar<- rowMeans(x2)
yn <- x1_bar*x2_bar
a<- c(1,2)
b<- t(c(1,2))
a%*%b
source('~/Documents/Learning_R/delta_method_multi.R')
source('~/Documents/Learning_R/delta_method_multi.R')
dim(t(grad_mu))
dim(sigma_matrix)
source('~/Documents/Learning_R/delta_method_multi.R')
source('~/Documents/Learning_R/delta_method_multi.R')
source('~/Documents/Learning_R/delta_method_multi.R')
source('~/Documents/Learning_R/delta_method_multi.R')
source('~/Documents/Learning_R/delta_method_multi.R')
source('~/Documents/Learning_R/delta_method_multi.R')
View(sigma_matrix)
source('~/Documents/Learning_R/delta_method_multi.R')
source('~/Documents/Learning_R/delta_method_multi.R')
source('~/Documents/Learning_R/delta_method_multi.R')
source('~/Documents/Learning_R/delta_method.R')
source('~/Documents/Learning_R/delta_method.R')
yn <- x1_bar*x2_bar*sqrt(N)
source('~/Documents/Learning_R/delta_method_multi.R')
source('~/Documents/Learning_R/delta_method_multi.R')
source('~/Documents/Learning_R/delta_method_multi.R')
source('~/Documents/Learning_R/delta_method_multi.R')
source('~/Documents/Learning_R/delta_method_multi.R')
source('~/Documents/Learning_R/delta_method_multi.R')
source('~/Documents/Learning_R/delta_method_multi.R')
source('~/Documents/Learning_R/delta_method_multi.R')
mean(yn)/sqrt(N)
mean(yn)
plot(tmp,dnorm(tmp,theorical_mu_Yn,sqrt(theorical_Var_Yn)))
hist(yn,probability = TRUE,main="Approx Dist of Yn",
xlab="Normal")
source('~/Documents/Learning_R/delta_method_multi.R')
source('~/Documents/Learning_R/delta_method_multi.R')
#Input parameters
N<-6000
mu_1<-5
mu_2<-4
sig1_1<-10
sig1_2<-8
sig2_1<-sig1_2
sig2_2<-9
amount_of_random_samples<-6000 #useful for visualisation
#Define statistical parameters
sigma_matrix<-cbind(c(sig1_1,sig2_1),c(sig1_2,sig2_2))
mu_vector<-c(mu_1,mu_2)
dim(mu_vector)<-c(1,2)
grad_mu <-c(mu_2,mu_1)
#Creating data
x1<-matrix(rnorm(amount_of_random_samples*N,mu_1,sqrt(sig1_1)),
amount_of_random_samples,N)
x2<-matrix(rnorm(amount_of_random_samples*N,mu_2,sqrt(sig2_2)),
amount_of_random_samples,N)
#Compute mean
x1_bar<- rowMeans(x1)
x2_bar<- rowMeans(x2)
yn <- x1_bar*x2_bar
#Compute Yn theorical variance and mean
theorical_mu_Yn <-mu_1*mu_2
theorical_Var_Yn <-(t(grad_mu)%*%sigma_matrix)%*%grad_mu
#Verifying plots
X11()
hist(sqrt(N)*(yn-theorical_mu_Yn),probability = TRUE,main="Approx Dist of Yn",
xlab="Normal")
tmp <-seq(-60,60,0.001)
source('~/Documents/Learning_R/delta_method_multi.R')
source('~/Documents/Learning_R/delta_method_multi.R')
var(sqrt(N)*(yn-theorical_mu_Yn))
theorical_Var_Yn/var(sqrt(N)*(yn-theorical_mu_Yn))
theorical_Var_Yn/var(sqrt(amount_of_random_samples)*(yn-theorical_mu_Yn))
source('~/Documents/Learning_R/delta_method_multi.R')
source('~/Documents/Learning_R/delta_method_multi.R')
example<-matrix(c(1,2,3,4,5,6,7,8),nrow=4,ncol=2)
View(example)
View(example)
install.packages(c("ggplot2", "devtools","lme4"))
install.packages("devtools")
library(datasets)
data(iris)
?iris
iris
View(iris)
s <- split(iris, iris$Species)
View(s)
s
s$virginica
test <-s$virginica
View(test)
sapply(s, function(x) colMeans(x[,c("Sepal.Length")]))
lapply(s, function(x) colMeans(x[,c("Sepal.Length")]))
sapply(s, function(x) colMeans(x[,c("Sepal.Length","Sepal.Width")]))
sapply(s, function(x) colMeans(x[,c("Sepal.Length","Sepal.Width")], na.rm = TRUE))
test2 <- apply(iris,2,mean)
View(iris)
test2 <- apply(iris[,1:4],2,mean)
library(datasets)
data(mtcars)
?mtcars
force(mtcars)
View(mtcars)
test1<-tapply(mtcars$mpg,mtcars$cyl,mean)
test1
?with
test2<-with(mtcars,tapply(mpg,cyl,mean))
test3<-tapply(mtcars$cyl,mtcars$mpg,mean)
test3<-mean(mtcars$mpg,mtcars$cyl)
test3<-sapply(split(mtcars$mpg,mtcars$cyl),mean)
test3
test3[2]
test3[2] -test3[1]
test3[,2] -test3[,1]
test3[1] -test3[3]
debug(ls)
ls
n
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
plot(x,y)
setwd("~/Documents/dataScience_spec/R_datascience_spec/exploratory_DA/assign_1")
setwd("~/Documents/dataScience_spec/R_datascience_spec/exploratory_DA/assign_1/ExData_Plotting1")
?read.table
?fread
setwd("~/Documents/dataScience_spec/R_datascience_spec/exploratory_DA/assign_1/ExData_Plotting1")
source('~/Documents/dataScience_spec/R_datascience_spec/exploratory_DA/assign_1/ExData_Plotting1/test1.R')
source('~/Documents/dataScience_spec/R_datascience_spec/exploratory_DA/assign_1/ExData_Plotting1/test1.R')
source('~/Documents/dataScience_spec/R_datascience_spec/exploratory_DA/assign_1/ExData_Plotting1/test1.R')
source('~/Documents/dataScience_spec/R_datascience_spec/exploratory_DA/assign_1/ExData_Plotting1/test1.R')
View(test_df)
source('~/Documents/dataScience_spec/R_datascience_spec/exploratory_DA/assign_1/ExData_Plotting1/test1.R')
View(test_df)
source('~/Documents/dataScience_spec/R_datascience_spec/exploratory_DA/assign_1/ExData_Plotting1/test1.R')
header<-read.table(filepath,nrows=1,sep=";")
View(header)
colnames(test_df)<- header
View(test_df)
View(header)
View(test_df)
names(test_df)<- header
View(test_df)
header
names(test_df)<- header[1,]
View(test_df)
header[1,]
c(header)
header[1,:]
header
as.vector(header)
a <- as.vector(header)
View(a)
View(header)
source('~/Documents/dataScience_spec/R_datascience_spec/exploratory_DA/assign_1/ExData_Plotting1/test1.R')
View(test_df)
names(test_df)
names(test_df) <- header
names(test_df)
names(test_df) <- as.character(header)
names(test_df)
a <- c("a","b","c")
as.character(header[1,])
View(header)
as.character(header)
as.character(c(header))
as.character(c(header[1]))
as.character(c(header[1,]))
as.vector(header)
as.vector(header,"character")
options(stringsAsFactors=FALSE)
as.vector(header,"character")
as.vector(unlist(header))
names(test_df)<-as.vector(unlist(header))
View(test_df)
source('~/Documents/dataScience_spec/R_datascience_spec/exploratory_DA/assign_1/ExData_Plotting1/test1.R')
View(test_df)
source('~/Documents/dataScience_spec/R_datascience_spec/exploratory_DA/assign_1/ExData_Plotting1/test1.R')
source('~/Documents/dataScience_spec/R_datascience_spec/exploratory_DA/assign_1/ExData_Plotting1/test1.R')
source('~/Documents/dataScience_spec/R_datascience_spec/exploratory_DA/assign_1/ExData_Plotting1/test1.R')
View(test_df)
source('~/Documents/dataScience_spec/R_datascience_spec/exploratory_DA/assign_1/ExData_Plotting1/test1.R')
View(test_df)
grep("1/2/2007", readLines(filepath)
)
a <-grep("1/2/2007", readLines(filepath))
a-1
source('~/Documents/dataScience_spec/R_datascience_spec/exploratory_DA/assign_1/ExData_Plotting1/test1.R')
View(test_df)
View(test_df)
hist(test_df$Global_active_power)
text("Global Active Power")
title("Global Active Power")
hist
?hist
hist(test_df$Global_active_power, main ="Global Active Power",xlab = "Global Active Power(kilowatts)", col ="red")
hist(test_df$Global_active_power, main ="Global Active Power",xlab = "Global Active Power (kilowatts)", col ="red")
?hist
?axis
hist(test_df$Global_active_power, main ="Global Active Power",xlab = "Global Active Power (kilowatts)", col ="red")
seq(0,100)
seq(0,100,20)
axis(2, at=seq(0,1200,200))
hist(test_df$Global_active_power, main ="Global Active Power",xlab = "Global Active Power (kilowatts)", col ="red")
axis(2, at=seq(0,1200,200))
plot(... , xaxt = "n")
seq(0,1200,200)
axis(2, at=seq(0,1200,200))
hist(test_df$Global_active_power, main ="Global Active Power",xlab = "Global Active Power (kilowatts)", col ="red", axis= FALSE)
axis(2, at=seq(0,1200,200))
hist(test_df$Global_active_power, main ="Global Active Power",xlab = "Global Active Power (kilowatts)", col ="red")
axis(2, at=seq(0,1200,200))
box()
hist(test_df$Global_active_power, main ="Global Active Power",xlab = "Global Active Power (kilowatts)", col ="red")
?file
?png
source('~/Documents/dataScience_spec/R_datascience_spec/exploratory_DA/assign_1/ExData_Plotting1/test1.R')
source('~/Documents/dataScience_spec/R_datascience_spec/exploratory_DA/assign_1/ExData_Plotting1/test1.R')
dfsaf
